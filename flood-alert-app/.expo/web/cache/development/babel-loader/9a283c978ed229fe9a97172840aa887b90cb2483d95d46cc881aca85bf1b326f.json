{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { getAlerts } from \"../api\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function AlertScreen() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    alerts = _useState2[0],\n    setAlerts = _useState2[1];\n  useEffect(function () {\n    var fetchAlerts = function () {\n      var _ref = _asyncToGenerator(function* () {\n        try {\n          var result = yield getAlerts();\n          setAlerts(result);\n        } catch (error) {\n          console.error('Erro ao buscar alertas:', error);\n        }\n      });\n      return function fetchAlerts() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    fetchAlerts();\n  }, []);\n  return _jsxs(ScrollView, {\n    contentContainerStyle: styles.container,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"Alertas Ativos\"\n    }), alerts.map(function (alert, index) {\n      return _jsxs(View, {\n        style: styles.card,\n        children: [_jsxs(Text, {\n          children: [\"Tipo: \", alert.tipo]\n        }), _jsxs(Text, {\n          children: [\"Descri\\xE7\\xE3o: \", alert.descricao]\n        }), _jsxs(Text, {\n          children: [\"Data/Hora: \", alert.dataHora]\n        })]\n      }, index);\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    padding: 20\n  },\n  title: {\n    fontSize: 22,\n    fontWeight: 'bold',\n    marginBottom: 10\n  },\n  card: {\n    backgroundColor: '#fff3cd',\n    padding: 15,\n    borderRadius: 10,\n    marginBottom: 10\n  }\n});","map":{"version":3,"names":["React","useEffect","useState","View","Text","StyleSheet","ScrollView","getAlerts","jsx","_jsx","jsxs","_jsxs","AlertScreen","_useState","_useState2","_slicedToArray","alerts","setAlerts","fetchAlerts","_ref","_asyncToGenerator","result","error","console","apply","arguments","contentContainerStyle","styles","container","children","style","title","map","alert","index","card","tipo","descricao","dataHora","create","padding","fontSize","fontWeight","marginBottom","backgroundColor","borderRadius"],"sources":["C:/flood-alert-app/screens/AlertScreen.js"],"sourcesContent":["\nimport React, { useEffect, useState } from 'react';\nimport { View, Text, StyleSheet, ScrollView } from 'react-native';\nimport { getAlerts } from '../api';\n\nexport default function AlertScreen() {\n  const [alerts, setAlerts] = useState([]);\n\n  useEffect(() => {\n    const fetchAlerts = async () => {\n      try {\n        const result = await getAlerts();\n        setAlerts(result);\n      } catch (error) {\n        console.error('Erro ao buscar alertas:', error);\n      }\n    };\n\n    fetchAlerts();\n  }, []);\n\n  return (\n    <ScrollView contentContainerStyle={styles.container}>\n      <Text style={styles.title}>Alertas Ativos</Text>\n      {alerts.map((alert, index) => (\n        <View key={index} style={styles.card}>\n          <Text>Tipo: {alert.tipo}</Text>\n          <Text>Descrição: {alert.descricao}</Text>\n          <Text>Data/Hora: {alert.dataHora}</Text>\n        </View>\n      ))}\n    </ScrollView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: { padding: 20 },\n  title: { fontSize: 22, fontWeight: 'bold', marginBottom: 10 },\n  card: {\n    backgroundColor: '#fff3cd',\n    padding: 15,\n    borderRadius: 10,\n    marginBottom: 10,\n  },\n});\n"],"mappings":";;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,UAAA;AAEnD,SAASC,SAAS;AAAiB,SAAAC,GAAA,IAAAC,IAAA,EAAAC,IAAA,IAAAC,KAAA;AAEnC,eAAe,SAASC,WAAWA,CAAA,EAAG;EACpC,IAAAC,SAAA,GAA4BX,QAAQ,CAAC,EAAE,CAAC;IAAAY,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAjCG,MAAM,GAAAF,UAAA;IAAEG,SAAS,GAAAH,UAAA;EAExBb,SAAS,CAAC,YAAM;IACd,IAAMiB,WAAW;MAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,aAAY;QAC9B,IAAI;UACF,IAAMC,MAAM,SAASd,SAAS,CAAC,CAAC;UAChCU,SAAS,CAACI,MAAM,CAAC;QACnB,CAAC,CAAC,OAAOC,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;QACjD;MACF,CAAC;MAAA,gBAPKJ,WAAWA,CAAA;QAAA,OAAAC,IAAA,CAAAK,KAAA,OAAAC,SAAA;MAAA;IAAA,GAOhB;IAEDP,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,OACEP,KAAA,CAACL,UAAU;IAACoB,qBAAqB,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAClDpB,IAAA,CAACL,IAAI;MAAC0B,KAAK,EAAEH,MAAM,CAACI,KAAM;MAAAF,QAAA,EAAC;IAAc,CAAM,CAAC,EAC/Cb,MAAM,CAACgB,GAAG,CAAC,UAACC,KAAK,EAAEC,KAAK;MAAA,OACvBvB,KAAA,CAACR,IAAI;QAAa2B,KAAK,EAAEH,MAAM,CAACQ,IAAK;QAAAN,QAAA,GACnClB,KAAA,CAACP,IAAI;UAAAyB,QAAA,GAAC,QAAM,EAACI,KAAK,CAACG,IAAI;QAAA,CAAO,CAAC,EAC/BzB,KAAA,CAACP,IAAI;UAAAyB,QAAA,GAAC,mBAAW,EAACI,KAAK,CAACI,SAAS;QAAA,CAAO,CAAC,EACzC1B,KAAA,CAACP,IAAI;UAAAyB,QAAA,GAAC,aAAW,EAACI,KAAK,CAACK,QAAQ;QAAA,CAAO,CAAC;MAAA,GAH/BJ,KAIL,CAAC;IAAA,CACR,CAAC;EAAA,CACQ,CAAC;AAEjB;AAEA,IAAMP,MAAM,GAAGtB,UAAU,CAACkC,MAAM,CAAC;EAC/BX,SAAS,EAAE;IAAEY,OAAO,EAAE;EAAG,CAAC;EAC1BT,KAAK,EAAE;IAAEU,QAAQ,EAAE,EAAE;IAAEC,UAAU,EAAE,MAAM;IAAEC,YAAY,EAAE;EAAG,CAAC;EAC7DR,IAAI,EAAE;IACJS,eAAe,EAAE,SAAS;IAC1BJ,OAAO,EAAE,EAAE;IACXK,YAAY,EAAE,EAAE;IAChBF,YAAY,EAAE;EAChB;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}